- 見積もりが終わらない
    - タイトル
        - アンチパターン・オブ・アジャイル見積もり
            - 目指すべきは、「変化を促進する計画づくり」だった
    - 本文
        - 自己紹介
            - SaaSの自社サービス開発エンジニアをしている
                - 詳細はURLからご確認ください
        - 会社で２ヶ月、スクラム開発をしました
            - 見積もりについて、失敗したことを話します
        - 状況説明
            - スクラムイベントのスライド
            - 「ここ」の話をします
        - 具体的な失敗の内容
            - 見積もりの「精度」が上がらなかった
        - どのように精度を上げようとしたか？
            - 見積もり時に、ストーリーの作業内容をすべて洗い出そうとした
        - 何を失敗したか？
            - 時間を掛けすぎた
                - ４ストーリーで合計４時間
                    - みんな疲弊する
            - かけた時間の割に、見積もりの精度が上がらない
                - 見積もり通りに完了したのは、１ストーリーだけ
        - なぜ失敗したか？
            - 詳細な作業内容まで分からず、想像で見積もった
                - ソースコードを見て初めて分かることが多い
                - Salesforceとの連携など、見積もりの場にいないマーケッターに質問しないと作業内容がわからない
            - 定義された要件を、そのまま実装しようとした
                - 要件定義イコール、完成された設計ではない
                    - プロダクトオーナーは、ソースコードを見ているわけではない
                    - 良いアイデアが、後で生まれる可能性を弱めてしまう
        - そもそも、「良い見積もり」とは何か
            - 変更しやすい見積もりであること
                - 良いアイデアは、後から出る
                - 一発でゴールには辿り着けない
        - 何を改善できそうか？
            - 要件定義のやり方
        - どのように改善できそうか？
            - ストーリーは、「機能」ではなく、「ユーザに届ける価値」を定義する
                - ex
                    - 前）メール送信前に、ポップアップを追加する
                    - 後）メールの誤送信を防ぐ
                - 価値を届けるための具体的な方法を、プロダクトオーナーと開発者が積極的に会話できるようになる
            - 見積もりポイントを、具体的な時間に置き換えない
                - 時間に置き換えると、合意が取りにくくなる
                - 「終わらせること」に注意が向きすぎて、場当たり的な実装をしやすくなる
        - まとめ
            - より良い価値をユーザに届けるために見積もる
                - 変更しやすい計画にする